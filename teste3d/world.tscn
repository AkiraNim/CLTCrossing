[gd_scene load_steps=15 format=3 uid="uid://b87xkv30pttbn"]

[ext_resource type="Texture2D" uid="uid://brf6ayh15fh18" path="res://Texturas/Grass_02_Green_1.png" id="1_1y0oo"]
[ext_resource type="Script" path="res://view.gd" id="1_bvt6o"]
[ext_resource type="Texture2D" uid="uid://ckukhwxmi4h20" path="res://Texturas/anime_skybox.jpg" id="2_2fltk"]
[ext_resource type="PackedScene" uid="uid://16iu10wxub40" path="res://actors/models/sophia/model/sophia.glb" id="3_50pb6"]
[ext_resource type="PackedScene" uid="uid://dgcdg5o6eywbq" path="res://Formas/Paredes/Parede_de_tijolos_vermelhos.tscn" id="4_7rjqu"]
[ext_resource type="PackedScene" uid="uid://cwu1uk163134l" path="res://Formas/Rampas/Rampa_pedra.tscn" id="5_c5rjj"]

[sub_resource type="GDScript" id="GDScript_dw44y"]
script/source = "extends CharacterBody3D


const SPEED = 200.0
const JUMP_VELOCITY = 10.0
@onready var  animator = get_node(\"sophia/AnimationPlayer\") as AnimationPlayer

@export var view : Node3D
var gravity = 0
var movement_velocity : Vector3
var rotation_direction : float

func _physics_process(delta):
	handle_input(delta)
	jump (delta)
	handle_animations()
	
	var applied_velocity : Vector3
	applied_velocity = velocity.lerp(movement_velocity, delta * 10)
	applied_velocity.y = -gravity
	
	velocity = applied_velocity
	
	apply_gravity(delta)
	# Add the gravity.
	if not is_on_floor():
		velocity.y -= gravity * delta

	
	move_and_slide()
	
	if Vector2(velocity.z, velocity.x).length()>0:
		rotation_direction = Vector2(velocity.z, velocity.x).angle()
		
	rotation.y = lerp_angle(rotation.y, rotation_direction, delta * 10)
	

func handle_input(delta) :
	var input = Vector3.ZERO
	input.x = Input.get_axis(\"move_left\", \"move_right\")
	input.z = Input.get_axis(\"move_forward\",\"move_backward\")
	
	input = input.rotated(Vector3.UP, view.rotation.y).normalized()
	
	velocity = input * SPEED * delta

func handle_animations():
	if is_on_floor():
		if abs(velocity.x) > 1 or abs(velocity.z) > 1:
			animator.play(\"Run\", 0.3)
		else:
			animator.play(\"Idle\", 0.3)
	else:
		animator.play(\"Jump\", 0.3)
		
	if !is_on_floor() and gravity > 2:
		animator.play(\"Fall\", 0.3)
	
	
func apply_gravity(delta):
	if !is_on_floor():
		gravity += 25 * delta

func jump (delta):
	if Input.is_action_just_pressed(\"jump\") and is_on_floor():
		gravity = -JUMP_VELOCITY
		
	if gravity > 0 and is_on_floor():
		gravity = 0
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_r6f1i"]
radius = 0.905066
height = 2.4773

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_ia8ws"]
albedo_texture = ExtResource("1_1y0oo")

[sub_resource type="PlaneMesh" id="PlaneMesh_oq3r5"]
size = Vector2(20, 20)

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_s5uph"]
data = PackedVector3Array(10, 0, 10, -10, 0, 10, 10, 0, -10, -10, 0, 10, -10, 0, -10, 10, 0, -10)

[sub_resource type="PanoramaSkyMaterial" id="PanoramaSkyMaterial_fbmgm"]
panorama = ExtResource("2_2fltk")

[sub_resource type="Sky" id="Sky_mkk40"]
sky_material = SubResource("PanoramaSkyMaterial_fbmgm")

[sub_resource type="Environment" id="Environment_1eof4"]
background_mode = 2
sky = SubResource("Sky_mkk40")
ambient_light_source = 3
reflected_light_source = 2

[node name="World" type="Node3D"]

[node name="CameraPivot" type="Node3D" parent="." node_paths=PackedStringArray("target")]
transform = Transform3D(1, 0, 0, 0, 0.609924, 0.79246, 0, -0.79246, 0.609924, 0, 3.25119, 3.2357)
script = ExtResource("1_bvt6o")
target = NodePath("../Player")

[node name="Camera" type="Camera3D" parent="CameraPivot"]
fov = 23.8755

[node name="Player" type="CharacterBody3D" parent="." node_paths=PackedStringArray("view")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.503828, 0)
script = SubResource("GDScript_dw44y")
view = NodePath("../CameraPivot")

[node name="sophia" parent="Player" instance=ExtResource("3_50pb6")]
transform = Transform3D(0.5, 0, 0, 0, 0.5, 0, 0, 0, 0.5, 0, 0, 0)

[node name="CollisionShape3D" type="CollisionShape3D" parent="Player"]
transform = Transform3D(0.5, 0, 0, 0, 0.5, 0, 0, 0, 0.5, 0, 0.555997, 0)
shape = SubResource("CapsuleShape3D_r6f1i")

[node name="Floor" type="MeshInstance3D" parent="."]
material_override = SubResource("StandardMaterial3D_ia8ws")
mesh = SubResource("PlaneMesh_oq3r5")

[node name="StaticBody3D" type="StaticBody3D" parent="Floor"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Floor/StaticBody3D"]
shape = SubResource("ConcavePolygonShape3D_s5uph")

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_1eof4")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="WorldEnvironment"]
transform = Transform3D(0.0501355, 0.897512, -0.43813, -0.102037, 0.440989, 0.891693, 0.993516, 0, 0.113689, -4.30132, 0, 0)
shadow_enabled = true

[node name="Node3D" parent="." instance=ExtResource("4_7rjqu")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 2.15484, 0.50793, 0.243949)

[node name="Node3D2" parent="." instance=ExtResource("5_c5rjj")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 1.22835, 0.504548, 0.233054)

[node name="Node3D3" parent="." instance=ExtResource("4_7rjqu")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -1.69625, -2.38419e-07, 4.11135)

[node name="Node3D4" parent="." instance=ExtResource("4_7rjqu")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 1.69768, 2.38419e-07, -3.26425)
